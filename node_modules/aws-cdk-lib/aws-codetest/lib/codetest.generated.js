"use strict";var _a,_b;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnSeries=exports.CfnPersistentConfiguration=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var cdk=()=>{var tmp=require("../../core");return cdk=()=>tmp,tmp},cfn_parse=()=>{var tmp=require("../../core/lib/helpers-internal");return cfn_parse=()=>tmp,tmp};class CfnPersistentConfiguration extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnPersistentConfigurationPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnPersistentConfiguration(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnPersistentConfiguration.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_codetest_CfnPersistentConfigurationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnPersistentConfiguration),error}cdk().requireProperty(props,"resultsRoleArn",this),this.attrId=cdk().Token.asString(this.getAtt("Id",cdk().ResolutionTypeHint.STRING)),this.name=props.name,this.resultsRoleArn=props.resultsRoleArn,this.version=props.version,this.vpcConfig=props.vpcConfig}get cfnProperties(){return{name:this.name,resultsRoleArn:this.resultsRoleArn,version:this.version,vpcConfig:this.vpcConfig}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnPersistentConfiguration.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnPersistentConfigurationPropsToCloudFormation(props)}}exports.CfnPersistentConfiguration=CfnPersistentConfiguration,_a=JSII_RTTI_SYMBOL_1,CfnPersistentConfiguration[_a]={fqn:"aws-cdk-lib.aws_codetest.CfnPersistentConfiguration",version:"2.121.1"},CfnPersistentConfiguration.CFN_RESOURCE_TYPE_NAME="AWS::CodeTest::PersistentConfiguration";function CfnPersistentConfigurationVpcConfigPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("securityGroupIds",cdk().listValidator(cdk().validateString))(properties.securityGroupIds)),errors.collect(cdk().propertyValidator("subnets",cdk().listValidator(cdk().validateString))(properties.subnets)),errors.wrap('supplied properties not correct for "VpcConfigProperty"')}function convertCfnPersistentConfigurationVpcConfigPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnPersistentConfigurationVpcConfigPropertyValidator(properties).assertSuccess(),{SecurityGroupIds:cdk().listMapper(cdk().stringToCloudFormation)(properties.securityGroupIds),Subnets:cdk().listMapper(cdk().stringToCloudFormation)(properties.subnets)}):properties}function CfnPersistentConfigurationVpcConfigPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("securityGroupIds","SecurityGroupIds",properties.SecurityGroupIds!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.SecurityGroupIds):void 0),ret.addPropertyResult("subnets","Subnets",properties.Subnets!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.Subnets):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnPersistentConfigurationPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("name",cdk().validateString)(properties.name)),errors.collect(cdk().propertyValidator("resultsRoleArn",cdk().requiredValidator)(properties.resultsRoleArn)),errors.collect(cdk().propertyValidator("resultsRoleArn",cdk().validateString)(properties.resultsRoleArn)),errors.collect(cdk().propertyValidator("version",cdk().validateString)(properties.version)),errors.collect(cdk().propertyValidator("vpcConfig",CfnPersistentConfigurationVpcConfigPropertyValidator)(properties.vpcConfig)),errors.wrap('supplied properties not correct for "CfnPersistentConfigurationProps"')}function convertCfnPersistentConfigurationPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnPersistentConfigurationPropsValidator(properties).assertSuccess(),{Name:cdk().stringToCloudFormation(properties.name),ResultsRoleArn:cdk().stringToCloudFormation(properties.resultsRoleArn),Version:cdk().stringToCloudFormation(properties.version),VpcConfig:convertCfnPersistentConfigurationVpcConfigPropertyToCloudFormation(properties.vpcConfig)}):properties}function CfnPersistentConfigurationPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse().FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("resultsRoleArn","ResultsRoleArn",properties.ResultsRoleArn!=null?cfn_parse().FromCloudFormation.getString(properties.ResultsRoleArn):void 0),ret.addPropertyResult("version","Version",properties.Version!=null?cfn_parse().FromCloudFormation.getString(properties.Version):void 0),ret.addPropertyResult("vpcConfig","VpcConfig",properties.VpcConfig!=null?CfnPersistentConfigurationVpcConfigPropertyFromCloudFormation(properties.VpcConfig):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnSeries extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnSeriesPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnSeries(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnSeries.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_codetest_CfnSeriesProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnSeries),error}cdk().requireProperty(props,"persistentConfigurationId",this),cdk().requireProperty(props,"runDefinition",this),cdk().requireProperty(props,"state",this),this.attrId=cdk().Token.asString(this.getAtt("Id",cdk().ResolutionTypeHint.STRING)),this.name=props.name,this.persistentConfigurationId=props.persistentConfigurationId,this.runDefinition=props.runDefinition,this.state=props.state}get cfnProperties(){return{name:this.name,persistentConfigurationId:this.persistentConfigurationId,runDefinition:this.runDefinition,state:this.state}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnSeries.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnSeriesPropsToCloudFormation(props)}}exports.CfnSeries=CfnSeries,_b=JSII_RTTI_SYMBOL_1,CfnSeries[_b]={fqn:"aws-cdk-lib.aws_codetest.CfnSeries",version:"2.121.1"},CfnSeries.CFN_RESOURCE_TYPE_NAME="AWS::CodeTest::Series";function CfnSeriesPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("name",cdk().validateString)(properties.name)),errors.collect(cdk().propertyValidator("persistentConfigurationId",cdk().requiredValidator)(properties.persistentConfigurationId)),errors.collect(cdk().propertyValidator("persistentConfigurationId",cdk().validateString)(properties.persistentConfigurationId)),errors.collect(cdk().propertyValidator("runDefinition",cdk().requiredValidator)(properties.runDefinition)),errors.collect(cdk().propertyValidator("runDefinition",cdk().validateObject)(properties.runDefinition)),errors.collect(cdk().propertyValidator("state",cdk().requiredValidator)(properties.state)),errors.collect(cdk().propertyValidator("state",cdk().validateString)(properties.state)),errors.wrap('supplied properties not correct for "CfnSeriesProps"')}function convertCfnSeriesPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnSeriesPropsValidator(properties).assertSuccess(),{Name:cdk().stringToCloudFormation(properties.name),PersistentConfigurationId:cdk().stringToCloudFormation(properties.persistentConfigurationId),RunDefinition:cdk().objectToCloudFormation(properties.runDefinition),State:cdk().stringToCloudFormation(properties.state)}):properties}function CfnSeriesPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse().FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("persistentConfigurationId","PersistentConfigurationId",properties.PersistentConfigurationId!=null?cfn_parse().FromCloudFormation.getString(properties.PersistentConfigurationId):void 0),ret.addPropertyResult("runDefinition","RunDefinition",properties.RunDefinition!=null?cfn_parse().FromCloudFormation.getAny(properties.RunDefinition):void 0),ret.addPropertyResult("state","State",properties.State!=null?cfn_parse().FromCloudFormation.getString(properties.State):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
