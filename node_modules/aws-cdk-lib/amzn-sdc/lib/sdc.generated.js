"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnDeployment=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var cdk=()=>{var tmp=require("../../core");return cdk=()=>tmp,tmp},cfn_parse=()=>{var tmp=require("../../core/lib/helpers-internal");return cfn_parse=()=>tmp,tmp};class CfnDeployment extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDeploymentPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDeployment(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDeployment.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_amzn_sdc_CfnDeploymentProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDeployment),error}cdk().requireProperty(props,"configName",this),cdk().requireProperty(props,"dimension",this),cdk().requireProperty(props,"s3Bucket",this),cdk().requireProperty(props,"s3Key",this),cdk().requireProperty(props,"stage",this),this.attrId=cdk().Token.asString(this.getAtt("Id",cdk().ResolutionTypeHint.STRING)),this.configName=props.configName,this.dimension=props.dimension,this.pipelineId=props.pipelineId,this.s3Bucket=props.s3Bucket,this.s3Key=props.s3Key,this.stage=props.stage,this.targetRegionOverride=props.targetRegionOverride}get cfnProperties(){return{configName:this.configName,dimension:this.dimension,pipelineId:this.pipelineId,s3Bucket:this.s3Bucket,s3Key:this.s3Key,stage:this.stage,targetRegionOverride:this.targetRegionOverride}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDeployment.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDeploymentPropsToCloudFormation(props)}}exports.CfnDeployment=CfnDeployment,_a=JSII_RTTI_SYMBOL_1,CfnDeployment[_a]={fqn:"aws-cdk-lib.amzn_sdc.CfnDeployment",version:"2.121.1"},CfnDeployment.CFN_RESOURCE_TYPE_NAME="AMZN::SDC::Deployment";function CfnDeploymentPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("configName",cdk().requiredValidator)(properties.configName)),errors.collect(cdk().propertyValidator("configName",cdk().validateString)(properties.configName)),errors.collect(cdk().propertyValidator("dimension",cdk().requiredValidator)(properties.dimension)),errors.collect(cdk().propertyValidator("dimension",cdk().validateString)(properties.dimension)),errors.collect(cdk().propertyValidator("pipelineId",cdk().validateString)(properties.pipelineId)),errors.collect(cdk().propertyValidator("s3Bucket",cdk().requiredValidator)(properties.s3Bucket)),errors.collect(cdk().propertyValidator("s3Bucket",cdk().validateString)(properties.s3Bucket)),errors.collect(cdk().propertyValidator("s3Key",cdk().requiredValidator)(properties.s3Key)),errors.collect(cdk().propertyValidator("s3Key",cdk().validateString)(properties.s3Key)),errors.collect(cdk().propertyValidator("stage",cdk().requiredValidator)(properties.stage)),errors.collect(cdk().propertyValidator("stage",cdk().validateString)(properties.stage)),errors.collect(cdk().propertyValidator("targetRegionOverride",cdk().validateString)(properties.targetRegionOverride)),errors.wrap('supplied properties not correct for "CfnDeploymentProps"')}function convertCfnDeploymentPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnDeploymentPropsValidator(properties).assertSuccess(),{ConfigName:cdk().stringToCloudFormation(properties.configName),Dimension:cdk().stringToCloudFormation(properties.dimension),PipelineId:cdk().stringToCloudFormation(properties.pipelineId),S3Bucket:cdk().stringToCloudFormation(properties.s3Bucket),S3Key:cdk().stringToCloudFormation(properties.s3Key),Stage:cdk().stringToCloudFormation(properties.stage),TargetRegionOverride:cdk().stringToCloudFormation(properties.targetRegionOverride)}):properties}function CfnDeploymentPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("configName","ConfigName",properties.ConfigName!=null?cfn_parse().FromCloudFormation.getString(properties.ConfigName):void 0),ret.addPropertyResult("dimension","Dimension",properties.Dimension!=null?cfn_parse().FromCloudFormation.getString(properties.Dimension):void 0),ret.addPropertyResult("pipelineId","PipelineId",properties.PipelineId!=null?cfn_parse().FromCloudFormation.getString(properties.PipelineId):void 0),ret.addPropertyResult("s3Bucket","S3Bucket",properties.S3Bucket!=null?cfn_parse().FromCloudFormation.getString(properties.S3Bucket):void 0),ret.addPropertyResult("s3Key","S3Key",properties.S3Key!=null?cfn_parse().FromCloudFormation.getString(properties.S3Key):void 0),ret.addPropertyResult("stage","Stage",properties.Stage!=null?cfn_parse().FromCloudFormation.getString(properties.Stage):void 0),ret.addPropertyResult("targetRegionOverride","TargetRegionOverride",properties.TargetRegionOverride!=null?cfn_parse().FromCloudFormation.getString(properties.TargetRegionOverride):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
